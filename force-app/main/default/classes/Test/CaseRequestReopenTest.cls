/**
 * @description       : Class used to test CaseRequestReopen class
 * @author            : Lucas Banquieri
 * @last modified on  : 2025-05-29
 */
@isTest
private class CaseRequestReopenTest {

    @isTest
    static void testReopenCaseRequestSuccess() {
        Profile p = [SELECT Id FROM Profile WHERE Name = 'System Administrator' LIMIT 1];

        //Create a user for testing purposes. What matters here is the ProfileId.
        User testUser = new User(
            Username = 'testcaserequestuser999999@example.com',
            Alias = 'tuser',
            Email = 'testcaserequestuser999999@example.com',
            EmailEncodingKey = 'UTF-8',
            LastName = 'User',
            LanguageLocaleKey = 'en_US',
            LocaleSidKey = 'en_US',
            TimeZoneSidKey = 'America/Los_Angeles',
            ProfileId = p.Id
        );
        insert testUser;

        Case_Request__c cr = new Case_Request__c();
        cr.Subject__c = 'Test Subject';
        cr.Priority__c = 'Medium';
        cr.Status__c = 'Closed';
        cr.Resolution_Notes__c = 'Teste';
        cr.Description__c = 'Case Request created for testing purposes.';
        cr.Bypass_Status_Validation__c = true;
        insert cr;

        //Runs the test as the test user
        System.runAs(testUser) {
            Test.startTest();
            CaseRequestReopen.reopenCaseRequest(cr.Id);
            Test.stopTest();
        }

        Case_Request__c caseUpdated = [SELECT Status__c FROM Case_Request__c WHERE Id = :cr.Id];
        System.assertEquals('In Progress', caseUpdated.Status__c);
    }

    @isTest
    static void testReopenCaseRequestUnauthorized() {
        Profile p = [SELECT Id FROM Profile WHERE Name = 'Support Standard' LIMIT 1];

        //Create a user for testing purposes. What matters here is the ProfileId.
        User unauthorizedUser = new User(
            Username = 'caserequestunauthuser999999@example.com',
            Alias = 'unauth',
            Email = 'caserequestunauthuser999999@example.com',
            EmailEncodingKey = 'UTF-8',
            LastName = 'User',
            LanguageLocaleKey = 'en_US',
            LocaleSidKey = 'en_US',
            TimeZoneSidKey = 'America/Los_Angeles',
            ProfileId = p.Id
        );
        insert unauthorizedUser;

        Case_Request__c cr = new Case_Request__c();
        cr.Subject__c = 'Test Subject';
        cr.Priority__c = 'Medium';
        cr.Status__c = 'Closed';
        cr.Resolution_Notes__c = 'Teste';
        cr.Description__c = 'Case Request created for testing purposes.';
        cr.Bypass_Status_Validation__c = true;
        insert cr;

        //Runs the test as the test user
        System.runAs(unauthorizedUser) {
            Test.startTest();
            Boolean exceptionThrown = false;
            try {
                CaseRequestReopen.reopenCaseRequest(cr.Id);
            } catch (AuraHandledException e) {
                exceptionThrown = true; //Used a boolean here because when it comes to AuraHandledExceptions, it is not possible to get the message
            }
            Test.stopTest();
            System.assertEquals(true, exceptionThrown, 'It was expected an AuraHandledException for unauthorized user');
        }
    }

    @isTest
    static void testReopenCaseRequestInvalidStatus() {
        Profile p = [SELECT Id FROM Profile WHERE Name = 'System Administrator' LIMIT 1];

        //Create a user for testing purposes. What matters here is the ProfileId.
        User testUser = new User(
            Username = 'testcaserequestuser999999@example.com',
            Alias = 'tuser2',
            Email = 'testcaserequestuser999999@example.com',
            EmailEncodingKey = 'UTF-8',
            LastName = 'User',
            LanguageLocaleKey = 'en_US',
            LocaleSidKey = 'en_US',
            TimeZoneSidKey = 'America/Los_Angeles',
            ProfileId = p.Id
        );
        insert testUser;

        Case_Request__c cr = new Case_Request__c();
        cr.Subject__c = 'Test Subject';
        cr.Priority__c = 'Medium';
        cr.Status__c = 'New';
        cr.Resolution_Notes__c = 'Teste';
        cr.Description__c = 'Case Request created for testing purposes.';
        cr.Bypass_Status_Validation__c = true;
        insert cr;

        //Runs the test as the test user
        System.runAs(testUser) {
            Test.startTest();
            Boolean exceptionThrown = false;
            try {
                CaseRequestReopen.reopenCaseRequest(cr.Id);
            } catch (AuraHandledException e) {
                exceptionThrown = true; //Used a boolean here because when it comes to AuraHandledExceptions, it is not possible to get the message
            }
            Test.stopTest();
            System.assertEquals(true, exceptionThrown, 'It was expected an exception for invalid status');
        }
    }
}